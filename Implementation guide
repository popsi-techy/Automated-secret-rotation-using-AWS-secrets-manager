Step-by-Step Guide:

1. Create a Secrets Manager Secret:

--Open the AWS Secrets Manager Console.
--Choose "Store a new secret."
--Choose secret type according to use (Here: Credentials for other database)
--Enter Credentials(User name & Password). These grant access to the database.
--For "Secret key/value," enter the root users and their initial passwords. 
For example:
{
  "users": [
    {"username": "root1", "password": "initial_password1"},
    {"username": "root2", "password": "initial_password2"}
    // Add more users as needed
  ],
  "rotation_timestamp": "2023-01-01T12:00:00Z"
}
--Select Dtabase according to use (Here: MySQL)
--Enter Server address; Database name and Port.
--Choose "Next"
--For "Secret name," enter a name like "prod/AppBeta/MySQL."
--Choose "Next"
--For instance keep "Configure automatic rotation" Disabled.
--Choose "Next".
--Configure any additional settings as needed.
--Review your settings.
--Choose "Next" and then "Store."

2. Configure Lambda Function:

--Go to AWS lambda console
--Create new function
--In code source Upload pythonLambdaFunction.zip file.
----Edit the lambda_function.py file present in zip file according to your credentials before uploading.
-- It is a Python Lambda function that rotates the MySQL root user passwords stored in Secrets Manager.
--Run and test the file.

3. Schedule Rotation with CloudWatch Events:

--Open the AWS CloudWatch Console.
--Choose "Rules" in the left navigation pane.
--Choose "Create Rule."
--For "Event Source," choose "Event Source Type" as "Event Source" and "Event Type" as "Scheduled."
--Set the schedule expression to cron(0 0 */40 * ? *) for every 40 days (Change days according to your need).
--For "Targets," add your Lambda function.

4. Configure SNS for Notifications:

4.1  Create an SNS Topic: 
--Go to the AWS Management Console.
--Navigate to the SNS service.
--Click on "Create topic."
--Enter a name for the topic (e.g., MySQLRotationNotification).
--Optionally, set display name and other configurations.
--Click on "Create topic."

4.2 Subscribe Endpoints:
--Once the topic is created, select the topic from the list.
--Click on "Create subscription."
--Choose the protocol for your endpoint (Lambda).
--Enter the endpoint details (Lambda function ARN).
--Confirm the subscription.

4.3 Get TOpic ARN:

--After creating the topic and subscribing endpoints, go back to the topic list.
--Select the newly created topic.
--Copy the ARN (Amazon Resource Name) of the topic. Use this ARN in the Lambda function.

5. IAM Role and Policies:

--Create an IAM role for your Lambda function with the necessary policies to read from Secrets Manager and publish to SNS.
--Attach the following policies:
----SecretsManagerReadWrite
----AWSLambdaBasicExecutionRole
----AmazonSNSFullAccess

**Note:
--Update the SNS topic ARN and other details in the Lambda function code.
--Test the entire setup in a controlled environment before deploying to production.

